// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircleImageView accImageHome;

  @NonNull
  public final Button btnChatMitra;

  @NonNull
  public final LinearLayout btnCrops;

  @NonNull
  public final LinearLayout btnDiseaseAndDrug;

  @NonNull
  public final TextView btnFullArtikel;

  @NonNull
  public final Button btnKelolaKemitraan;

  @NonNull
  public final Button btnKonsultasi;

  @NonNull
  public final Button btnRegisterMitra;

  @NonNull
  public final Button btnWaitingReview;

  @NonNull
  public final ConstraintLayout constraintAsAhliTani;

  @NonNull
  public final ConstraintLayout constraintAsMitra;

  @NonNull
  public final ConstraintLayout constraintKelolaKemitraan;

  @NonNull
  public final ConstraintLayout constraintRegister;

  @NonNull
  public final ConstraintLayout constraintUnregister;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textView2;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull CircleImageView accImageHome,
      @NonNull Button btnChatMitra, @NonNull LinearLayout btnCrops,
      @NonNull LinearLayout btnDiseaseAndDrug, @NonNull TextView btnFullArtikel,
      @NonNull Button btnKelolaKemitraan, @NonNull Button btnKonsultasi,
      @NonNull Button btnRegisterMitra, @NonNull Button btnWaitingReview,
      @NonNull ConstraintLayout constraintAsAhliTani, @NonNull ConstraintLayout constraintAsMitra,
      @NonNull ConstraintLayout constraintKelolaKemitraan,
      @NonNull ConstraintLayout constraintRegister, @NonNull ConstraintLayout constraintUnregister,
      @NonNull ImageView imageView, @NonNull LinearLayout linearLayout1,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout linearLayout6,
      @NonNull RecyclerView recyclerView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.accImageHome = accImageHome;
    this.btnChatMitra = btnChatMitra;
    this.btnCrops = btnCrops;
    this.btnDiseaseAndDrug = btnDiseaseAndDrug;
    this.btnFullArtikel = btnFullArtikel;
    this.btnKelolaKemitraan = btnKelolaKemitraan;
    this.btnKonsultasi = btnKonsultasi;
    this.btnRegisterMitra = btnRegisterMitra;
    this.btnWaitingReview = btnWaitingReview;
    this.constraintAsAhliTani = constraintAsAhliTani;
    this.constraintAsMitra = constraintAsMitra;
    this.constraintKelolaKemitraan = constraintKelolaKemitraan;
    this.constraintRegister = constraintRegister;
    this.constraintUnregister = constraintUnregister;
    this.imageView = imageView;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.linearLayout6 = linearLayout6;
    this.recyclerView = recyclerView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accImageHome;
      CircleImageView accImageHome = ViewBindings.findChildViewById(rootView, id);
      if (accImageHome == null) {
        break missingId;
      }

      id = R.id.btnChatMitra;
      Button btnChatMitra = ViewBindings.findChildViewById(rootView, id);
      if (btnChatMitra == null) {
        break missingId;
      }

      id = R.id.btnCrops;
      LinearLayout btnCrops = ViewBindings.findChildViewById(rootView, id);
      if (btnCrops == null) {
        break missingId;
      }

      id = R.id.btnDiseaseAndDrug;
      LinearLayout btnDiseaseAndDrug = ViewBindings.findChildViewById(rootView, id);
      if (btnDiseaseAndDrug == null) {
        break missingId;
      }

      id = R.id.btnFullArtikel;
      TextView btnFullArtikel = ViewBindings.findChildViewById(rootView, id);
      if (btnFullArtikel == null) {
        break missingId;
      }

      id = R.id.btnKelolaKemitraan;
      Button btnKelolaKemitraan = ViewBindings.findChildViewById(rootView, id);
      if (btnKelolaKemitraan == null) {
        break missingId;
      }

      id = R.id.btnKonsultasi;
      Button btnKonsultasi = ViewBindings.findChildViewById(rootView, id);
      if (btnKonsultasi == null) {
        break missingId;
      }

      id = R.id.btnRegisterMitra;
      Button btnRegisterMitra = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterMitra == null) {
        break missingId;
      }

      id = R.id.btnWaitingReview;
      Button btnWaitingReview = ViewBindings.findChildViewById(rootView, id);
      if (btnWaitingReview == null) {
        break missingId;
      }

      id = R.id.constraintAsAhliTani;
      ConstraintLayout constraintAsAhliTani = ViewBindings.findChildViewById(rootView, id);
      if (constraintAsAhliTani == null) {
        break missingId;
      }

      id = R.id.constraintAsMitra;
      ConstraintLayout constraintAsMitra = ViewBindings.findChildViewById(rootView, id);
      if (constraintAsMitra == null) {
        break missingId;
      }

      id = R.id.constraintKelolaKemitraan;
      ConstraintLayout constraintKelolaKemitraan = ViewBindings.findChildViewById(rootView, id);
      if (constraintKelolaKemitraan == null) {
        break missingId;
      }

      id = R.id.constraintRegister;
      ConstraintLayout constraintRegister = ViewBindings.findChildViewById(rootView, id);
      if (constraintRegister == null) {
        break missingId;
      }

      id = R.id.constraintUnregister;
      ConstraintLayout constraintUnregister = ViewBindings.findChildViewById(rootView, id);
      if (constraintUnregister == null) {
        break missingId;
      }

      id = R.id.image_view;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linear_layout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linear_layout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linear_layout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linear_layout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linear_layout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, accImageHome, btnChatMitra, btnCrops,
          btnDiseaseAndDrug, btnFullArtikel, btnKelolaKemitraan, btnKonsultasi, btnRegisterMitra,
          btnWaitingReview, constraintAsAhliTani, constraintAsMitra, constraintKelolaKemitraan,
          constraintRegister, constraintUnregister, imageView, linearLayout1, linearLayout2,
          linearLayout3, linearLayout4, linearLayout6, recyclerView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
