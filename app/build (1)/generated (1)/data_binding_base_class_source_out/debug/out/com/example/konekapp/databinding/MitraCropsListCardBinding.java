// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MitraCropsListCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDetailCropsMitraList;

  @NonNull
  public final TextView commodityCropsMitraList;

  @NonNull
  public final TextView dateCropsMitraList;

  @NonNull
  public final TextView periodCropsMitraList;

  private MitraCropsListCardBinding(@NonNull CardView rootView,
      @NonNull Button btnDetailCropsMitraList, @NonNull TextView commodityCropsMitraList,
      @NonNull TextView dateCropsMitraList, @NonNull TextView periodCropsMitraList) {
    this.rootView = rootView;
    this.btnDetailCropsMitraList = btnDetailCropsMitraList;
    this.commodityCropsMitraList = commodityCropsMitraList;
    this.dateCropsMitraList = dateCropsMitraList;
    this.periodCropsMitraList = periodCropsMitraList;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MitraCropsListCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MitraCropsListCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mitra_crops_list_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MitraCropsListCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDetailCropsMitraList;
      Button btnDetailCropsMitraList = ViewBindings.findChildViewById(rootView, id);
      if (btnDetailCropsMitraList == null) {
        break missingId;
      }

      id = R.id.commodityCropsMitraList;
      TextView commodityCropsMitraList = ViewBindings.findChildViewById(rootView, id);
      if (commodityCropsMitraList == null) {
        break missingId;
      }

      id = R.id.dateCropsMitraList;
      TextView dateCropsMitraList = ViewBindings.findChildViewById(rootView, id);
      if (dateCropsMitraList == null) {
        break missingId;
      }

      id = R.id.periodCropsMitraList;
      TextView periodCropsMitraList = ViewBindings.findChildViewById(rootView, id);
      if (periodCropsMitraList == null) {
        break missingId;
      }

      return new MitraCropsListCardBinding((CardView) rootView, btnDetailCropsMitraList,
          commodityCropsMitraList, dateCropsMitraList, periodCropsMitraList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
