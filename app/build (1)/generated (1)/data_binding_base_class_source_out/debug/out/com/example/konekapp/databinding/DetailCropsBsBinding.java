// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailCropsBsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnApproveDetailCrops;

  @NonNull
  public final LinearLayout btnChatDetailCrops;

  @NonNull
  public final LinearLayout btnDeleteDetailCrops;

  @NonNull
  public final LinearLayout btnEditDetailCrops;

  @NonNull
  public final ConstraintLayout constraintDetailAdmin;

  @NonNull
  public final ConstraintLayout constraintDetailAhliTani;

  @NonNull
  public final TextView dateDetailCrops;

  @NonNull
  public final ImageView detailCropsClose;

  @NonNull
  public final TextView fertilizerDetailCrops;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final TextView locationDetailCrops;

  @NonNull
  public final TextView nameDetailCrops;

  @NonNull
  public final TextView notesDetailCrops;

  @NonNull
  public final TextView periodDetailCrops;

  @NonNull
  public final TextView qtyDetailCrops;

  @NonNull
  public final TextView resultDetailCrops;

  private DetailCropsBsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnApproveDetailCrops, @NonNull LinearLayout btnChatDetailCrops,
      @NonNull LinearLayout btnDeleteDetailCrops, @NonNull LinearLayout btnEditDetailCrops,
      @NonNull ConstraintLayout constraintDetailAdmin,
      @NonNull ConstraintLayout constraintDetailAhliTani, @NonNull TextView dateDetailCrops,
      @NonNull ImageView detailCropsClose, @NonNull TextView fertilizerDetailCrops,
      @NonNull LinearLayout linearLayout3, @NonNull TextView locationDetailCrops,
      @NonNull TextView nameDetailCrops, @NonNull TextView notesDetailCrops,
      @NonNull TextView periodDetailCrops, @NonNull TextView qtyDetailCrops,
      @NonNull TextView resultDetailCrops) {
    this.rootView = rootView;
    this.btnApproveDetailCrops = btnApproveDetailCrops;
    this.btnChatDetailCrops = btnChatDetailCrops;
    this.btnDeleteDetailCrops = btnDeleteDetailCrops;
    this.btnEditDetailCrops = btnEditDetailCrops;
    this.constraintDetailAdmin = constraintDetailAdmin;
    this.constraintDetailAhliTani = constraintDetailAhliTani;
    this.dateDetailCrops = dateDetailCrops;
    this.detailCropsClose = detailCropsClose;
    this.fertilizerDetailCrops = fertilizerDetailCrops;
    this.linearLayout3 = linearLayout3;
    this.locationDetailCrops = locationDetailCrops;
    this.nameDetailCrops = nameDetailCrops;
    this.notesDetailCrops = notesDetailCrops;
    this.periodDetailCrops = periodDetailCrops;
    this.qtyDetailCrops = qtyDetailCrops;
    this.resultDetailCrops = resultDetailCrops;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailCropsBsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailCropsBsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_crops_bs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailCropsBsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApproveDetailCrops;
      Button btnApproveDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (btnApproveDetailCrops == null) {
        break missingId;
      }

      id = R.id.btnChatDetailCrops;
      LinearLayout btnChatDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (btnChatDetailCrops == null) {
        break missingId;
      }

      id = R.id.btnDeleteDetailCrops;
      LinearLayout btnDeleteDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteDetailCrops == null) {
        break missingId;
      }

      id = R.id.btnEditDetailCrops;
      LinearLayout btnEditDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (btnEditDetailCrops == null) {
        break missingId;
      }

      id = R.id.constraintDetailAdmin;
      ConstraintLayout constraintDetailAdmin = ViewBindings.findChildViewById(rootView, id);
      if (constraintDetailAdmin == null) {
        break missingId;
      }

      id = R.id.constraintDetailAhliTani;
      ConstraintLayout constraintDetailAhliTani = ViewBindings.findChildViewById(rootView, id);
      if (constraintDetailAhliTani == null) {
        break missingId;
      }

      id = R.id.dateDetailCrops;
      TextView dateDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (dateDetailCrops == null) {
        break missingId;
      }

      id = R.id.detailCropsClose;
      ImageView detailCropsClose = ViewBindings.findChildViewById(rootView, id);
      if (detailCropsClose == null) {
        break missingId;
      }

      id = R.id.fertilizerDetailCrops;
      TextView fertilizerDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (fertilizerDetailCrops == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.locationDetailCrops;
      TextView locationDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (locationDetailCrops == null) {
        break missingId;
      }

      id = R.id.nameDetailCrops;
      TextView nameDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (nameDetailCrops == null) {
        break missingId;
      }

      id = R.id.notesDetailCrops;
      TextView notesDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (notesDetailCrops == null) {
        break missingId;
      }

      id = R.id.periodDetailCrops;
      TextView periodDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (periodDetailCrops == null) {
        break missingId;
      }

      id = R.id.qtyDetailCrops;
      TextView qtyDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (qtyDetailCrops == null) {
        break missingId;
      }

      id = R.id.resultDetailCrops;
      TextView resultDetailCrops = ViewBindings.findChildViewById(rootView, id);
      if (resultDetailCrops == null) {
        break missingId;
      }

      return new DetailCropsBsBinding((LinearLayout) rootView, btnApproveDetailCrops,
          btnChatDetailCrops, btnDeleteDetailCrops, btnEditDetailCrops, constraintDetailAdmin,
          constraintDetailAhliTani, dateDetailCrops, detailCropsClose, fertilizerDetailCrops,
          linearLayout3, locationDetailCrops, nameDetailCrops, notesDetailCrops, periodDetailCrops,
          qtyDetailCrops, resultDetailCrops);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
