// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailManageUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDeleteUser;

  @NonNull
  public final Button btnDetailManageUserDone;

  @NonNull
  public final EditText detailManageUserAddress;

  @NonNull
  public final ImageView detailManageUserBackAction;

  @NonNull
  public final EditText detailManageUserDetailAddress;

  @NonNull
  public final CircleImageView detailManageUserImage;

  @NonNull
  public final EditText detailManageUserName;

  @NonNull
  public final TextView detailManageUserPhoneNumber;

  private ActivityDetailManageUserBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnDeleteUser, @NonNull Button btnDetailManageUserDone,
      @NonNull EditText detailManageUserAddress, @NonNull ImageView detailManageUserBackAction,
      @NonNull EditText detailManageUserDetailAddress,
      @NonNull CircleImageView detailManageUserImage, @NonNull EditText detailManageUserName,
      @NonNull TextView detailManageUserPhoneNumber) {
    this.rootView = rootView;
    this.btnDeleteUser = btnDeleteUser;
    this.btnDetailManageUserDone = btnDetailManageUserDone;
    this.detailManageUserAddress = detailManageUserAddress;
    this.detailManageUserBackAction = detailManageUserBackAction;
    this.detailManageUserDetailAddress = detailManageUserDetailAddress;
    this.detailManageUserImage = detailManageUserImage;
    this.detailManageUserName = detailManageUserName;
    this.detailManageUserPhoneNumber = detailManageUserPhoneNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailManageUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailManageUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_manage_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailManageUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteUser;
      Button btnDeleteUser = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteUser == null) {
        break missingId;
      }

      id = R.id.btnDetailManageUserDone;
      Button btnDetailManageUserDone = ViewBindings.findChildViewById(rootView, id);
      if (btnDetailManageUserDone == null) {
        break missingId;
      }

      id = R.id.detailManageUserAddress;
      EditText detailManageUserAddress = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserAddress == null) {
        break missingId;
      }

      id = R.id.detailManageUserBackAction;
      ImageView detailManageUserBackAction = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserBackAction == null) {
        break missingId;
      }

      id = R.id.detailManageUserDetailAddress;
      EditText detailManageUserDetailAddress = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserDetailAddress == null) {
        break missingId;
      }

      id = R.id.detailManageUserImage;
      CircleImageView detailManageUserImage = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserImage == null) {
        break missingId;
      }

      id = R.id.detailManageUserName;
      EditText detailManageUserName = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserName == null) {
        break missingId;
      }

      id = R.id.detailManageUserPhoneNumber;
      TextView detailManageUserPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (detailManageUserPhoneNumber == null) {
        break missingId;
      }

      return new ActivityDetailManageUserBinding((LinearLayout) rootView, btnDeleteUser,
          btnDetailManageUserDone, detailManageUserAddress, detailManageUserBackAction,
          detailManageUserDetailAddress, detailManageUserImage, detailManageUserName,
          detailManageUserPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
