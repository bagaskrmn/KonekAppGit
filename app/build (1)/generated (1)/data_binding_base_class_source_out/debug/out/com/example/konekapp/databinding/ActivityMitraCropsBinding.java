// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMitraCropsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnMitraCropsDone;

  @NonNull
  public final Spinner cropsCommodity;

  @NonNull
  public final TextView cropsDate;

  @NonNull
  public final Spinner cropsFertilizer;

  @NonNull
  public final EditText cropsLocation;

  @NonNull
  public final EditText cropsNotes;

  @NonNull
  public final Spinner cropsPeriod;

  @NonNull
  public final EditText cropsQty;

  @NonNull
  public final EditText cropsResult;

  @NonNull
  public final ImageView imageView17;

  @NonNull
  public final ImageView imageView18;

  @NonNull
  public final ImageView mitraCropsBackAction;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private ActivityMitraCropsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnMitraCropsDone, @NonNull Spinner cropsCommodity,
      @NonNull TextView cropsDate, @NonNull Spinner cropsFertilizer,
      @NonNull EditText cropsLocation, @NonNull EditText cropsNotes, @NonNull Spinner cropsPeriod,
      @NonNull EditText cropsQty, @NonNull EditText cropsResult, @NonNull ImageView imageView17,
      @NonNull ImageView imageView18, @NonNull ImageView mitraCropsBackAction,
      @NonNull TextView textView3, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.btnMitraCropsDone = btnMitraCropsDone;
    this.cropsCommodity = cropsCommodity;
    this.cropsDate = cropsDate;
    this.cropsFertilizer = cropsFertilizer;
    this.cropsLocation = cropsLocation;
    this.cropsNotes = cropsNotes;
    this.cropsPeriod = cropsPeriod;
    this.cropsQty = cropsQty;
    this.cropsResult = cropsResult;
    this.imageView17 = imageView17;
    this.imageView18 = imageView18;
    this.mitraCropsBackAction = mitraCropsBackAction;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMitraCropsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMitraCropsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mitra_crops, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMitraCropsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMitraCropsDone;
      Button btnMitraCropsDone = ViewBindings.findChildViewById(rootView, id);
      if (btnMitraCropsDone == null) {
        break missingId;
      }

      id = R.id.cropsCommodity;
      Spinner cropsCommodity = ViewBindings.findChildViewById(rootView, id);
      if (cropsCommodity == null) {
        break missingId;
      }

      id = R.id.cropsDate;
      TextView cropsDate = ViewBindings.findChildViewById(rootView, id);
      if (cropsDate == null) {
        break missingId;
      }

      id = R.id.cropsFertilizer;
      Spinner cropsFertilizer = ViewBindings.findChildViewById(rootView, id);
      if (cropsFertilizer == null) {
        break missingId;
      }

      id = R.id.cropsLocation;
      EditText cropsLocation = ViewBindings.findChildViewById(rootView, id);
      if (cropsLocation == null) {
        break missingId;
      }

      id = R.id.cropsNotes;
      EditText cropsNotes = ViewBindings.findChildViewById(rootView, id);
      if (cropsNotes == null) {
        break missingId;
      }

      id = R.id.cropsPeriod;
      Spinner cropsPeriod = ViewBindings.findChildViewById(rootView, id);
      if (cropsPeriod == null) {
        break missingId;
      }

      id = R.id.cropsQty;
      EditText cropsQty = ViewBindings.findChildViewById(rootView, id);
      if (cropsQty == null) {
        break missingId;
      }

      id = R.id.cropsResult;
      EditText cropsResult = ViewBindings.findChildViewById(rootView, id);
      if (cropsResult == null) {
        break missingId;
      }

      id = R.id.imageView17;
      ImageView imageView17 = ViewBindings.findChildViewById(rootView, id);
      if (imageView17 == null) {
        break missingId;
      }

      id = R.id.imageView18;
      ImageView imageView18 = ViewBindings.findChildViewById(rootView, id);
      if (imageView18 == null) {
        break missingId;
      }

      id = R.id.mitraCropsBackAction;
      ImageView mitraCropsBackAction = ViewBindings.findChildViewById(rootView, id);
      if (mitraCropsBackAction == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityMitraCropsBinding((LinearLayout) rootView, btnMitraCropsDone,
          cropsCommodity, cropsDate, cropsFertilizer, cropsLocation, cropsNotes, cropsPeriod,
          cropsQty, cropsResult, imageView17, imageView18, mitraCropsBackAction, textView3,
          textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
