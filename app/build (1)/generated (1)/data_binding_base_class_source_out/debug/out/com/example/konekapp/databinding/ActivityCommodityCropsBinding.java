// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCommodityCropsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView commodityCropsBackAction;

  @NonNull
  public final RecyclerView commodityCropsRv;

  @NonNull
  public final TextView commodityNoData;

  @NonNull
  public final EditText searchCommodity;

  private ActivityCommodityCropsBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView commodityCropsBackAction, @NonNull RecyclerView commodityCropsRv,
      @NonNull TextView commodityNoData, @NonNull EditText searchCommodity) {
    this.rootView = rootView;
    this.commodityCropsBackAction = commodityCropsBackAction;
    this.commodityCropsRv = commodityCropsRv;
    this.commodityNoData = commodityNoData;
    this.searchCommodity = searchCommodity;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCommodityCropsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCommodityCropsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_commodity_crops, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCommodityCropsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commodityCropsBackAction;
      ImageView commodityCropsBackAction = ViewBindings.findChildViewById(rootView, id);
      if (commodityCropsBackAction == null) {
        break missingId;
      }

      id = R.id.commodityCropsRv;
      RecyclerView commodityCropsRv = ViewBindings.findChildViewById(rootView, id);
      if (commodityCropsRv == null) {
        break missingId;
      }

      id = R.id.commodityNoData;
      TextView commodityNoData = ViewBindings.findChildViewById(rootView, id);
      if (commodityNoData == null) {
        break missingId;
      }

      id = R.id.searchCommodity;
      EditText searchCommodity = ViewBindings.findChildViewById(rootView, id);
      if (searchCommodity == null) {
        break missingId;
      }

      return new ActivityCommodityCropsBinding((LinearLayout) rootView, commodityCropsBackAction,
          commodityCropsRv, commodityNoData, searchCommodity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
