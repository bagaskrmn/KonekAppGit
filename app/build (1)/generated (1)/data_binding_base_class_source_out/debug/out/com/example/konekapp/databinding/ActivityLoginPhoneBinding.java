// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chaos.view.PinView;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginPhoneBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSendOTP;

  @NonNull
  public final Button btnVerifyOTP;

  @NonNull
  public final TextView cTimer;

  @NonNull
  public final LinearLayout codeLl;

  @NonNull
  public final TextView descOTPCodeSent;

  @NonNull
  public final PinView enterOTPCode;

  @NonNull
  public final ImageView loginBackAction;

  @NonNull
  public final EditText loginPhoneNo;

  @NonNull
  public final LinearLayout phoneLl;

  @NonNull
  public final TextView resendOTP;

  private ActivityLoginPhoneBinding(@NonNull LinearLayout rootView, @NonNull Button btnSendOTP,
      @NonNull Button btnVerifyOTP, @NonNull TextView cTimer, @NonNull LinearLayout codeLl,
      @NonNull TextView descOTPCodeSent, @NonNull PinView enterOTPCode,
      @NonNull ImageView loginBackAction, @NonNull EditText loginPhoneNo,
      @NonNull LinearLayout phoneLl, @NonNull TextView resendOTP) {
    this.rootView = rootView;
    this.btnSendOTP = btnSendOTP;
    this.btnVerifyOTP = btnVerifyOTP;
    this.cTimer = cTimer;
    this.codeLl = codeLl;
    this.descOTPCodeSent = descOTPCodeSent;
    this.enterOTPCode = enterOTPCode;
    this.loginBackAction = loginBackAction;
    this.loginPhoneNo = loginPhoneNo;
    this.phoneLl = phoneLl;
    this.resendOTP = resendOTP;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSendOTP;
      Button btnSendOTP = ViewBindings.findChildViewById(rootView, id);
      if (btnSendOTP == null) {
        break missingId;
      }

      id = R.id.btnVerifyOTP;
      Button btnVerifyOTP = ViewBindings.findChildViewById(rootView, id);
      if (btnVerifyOTP == null) {
        break missingId;
      }

      id = R.id.cTimer;
      TextView cTimer = ViewBindings.findChildViewById(rootView, id);
      if (cTimer == null) {
        break missingId;
      }

      id = R.id.codeLl;
      LinearLayout codeLl = ViewBindings.findChildViewById(rootView, id);
      if (codeLl == null) {
        break missingId;
      }

      id = R.id.descOTPCodeSent;
      TextView descOTPCodeSent = ViewBindings.findChildViewById(rootView, id);
      if (descOTPCodeSent == null) {
        break missingId;
      }

      id = R.id.enterOTPCode;
      PinView enterOTPCode = ViewBindings.findChildViewById(rootView, id);
      if (enterOTPCode == null) {
        break missingId;
      }

      id = R.id.loginBackAction;
      ImageView loginBackAction = ViewBindings.findChildViewById(rootView, id);
      if (loginBackAction == null) {
        break missingId;
      }

      id = R.id.loginPhoneNo;
      EditText loginPhoneNo = ViewBindings.findChildViewById(rootView, id);
      if (loginPhoneNo == null) {
        break missingId;
      }

      id = R.id.phoneLl;
      LinearLayout phoneLl = ViewBindings.findChildViewById(rootView, id);
      if (phoneLl == null) {
        break missingId;
      }

      id = R.id.resendOTP;
      TextView resendOTP = ViewBindings.findChildViewById(rootView, id);
      if (resendOTP == null) {
        break missingId;
      }

      return new ActivityLoginPhoneBinding((LinearLayout) rootView, btnSendOTP, btnVerifyOTP,
          cTimer, codeLl, descOTPCodeSent, enterOTPCode, loginBackAction, loginPhoneNo, phoneLl,
          resendOTP);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
