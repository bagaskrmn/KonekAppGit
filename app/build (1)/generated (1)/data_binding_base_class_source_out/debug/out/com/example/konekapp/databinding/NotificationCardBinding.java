// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateNotification;

  @NonNull
  public final TextView descriptionNotification;

  @NonNull
  public final ImageView imageNotification;

  @NonNull
  public final TextView titleNotification;

  private NotificationCardBinding(@NonNull CardView rootView, @NonNull TextView dateNotification,
      @NonNull TextView descriptionNotification, @NonNull ImageView imageNotification,
      @NonNull TextView titleNotification) {
    this.rootView = rootView;
    this.dateNotification = dateNotification;
    this.descriptionNotification = descriptionNotification;
    this.imageNotification = imageNotification;
    this.titleNotification = titleNotification;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateNotification;
      TextView dateNotification = ViewBindings.findChildViewById(rootView, id);
      if (dateNotification == null) {
        break missingId;
      }

      id = R.id.descriptionNotification;
      TextView descriptionNotification = ViewBindings.findChildViewById(rootView, id);
      if (descriptionNotification == null) {
        break missingId;
      }

      id = R.id.imageNotification;
      ImageView imageNotification = ViewBindings.findChildViewById(rootView, id);
      if (imageNotification == null) {
        break missingId;
      }

      id = R.id.titleNotification;
      TextView titleNotification = ViewBindings.findChildViewById(rootView, id);
      if (titleNotification == null) {
        break missingId;
      }

      return new NotificationCardBinding((CardView) rootView, dateNotification,
          descriptionNotification, imageNotification, titleNotification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
