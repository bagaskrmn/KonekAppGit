// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailArtikelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView backActionDetailArtikel;

  @NonNull
  public final TextView detailArtikelDate;

  @NonNull
  public final TextView detailArtikelDescription;

  @NonNull
  public final ImageView detailArtikelImage;

  @NonNull
  public final TextView detailArtikelSource;

  @NonNull
  public final TextView detailArtikelSourceImage;

  @NonNull
  public final TextView detailArtikelTitle;

  @NonNull
  public final ImageView menuArtikel;

  @NonNull
  public final View spaceViewArtikel;

  @NonNull
  public final TextView textImageUrl;

  private ActivityDetailArtikelBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView backActionDetailArtikel, @NonNull TextView detailArtikelDate,
      @NonNull TextView detailArtikelDescription, @NonNull ImageView detailArtikelImage,
      @NonNull TextView detailArtikelSource, @NonNull TextView detailArtikelSourceImage,
      @NonNull TextView detailArtikelTitle, @NonNull ImageView menuArtikel,
      @NonNull View spaceViewArtikel, @NonNull TextView textImageUrl) {
    this.rootView = rootView;
    this.backActionDetailArtikel = backActionDetailArtikel;
    this.detailArtikelDate = detailArtikelDate;
    this.detailArtikelDescription = detailArtikelDescription;
    this.detailArtikelImage = detailArtikelImage;
    this.detailArtikelSource = detailArtikelSource;
    this.detailArtikelSourceImage = detailArtikelSourceImage;
    this.detailArtikelTitle = detailArtikelTitle;
    this.menuArtikel = menuArtikel;
    this.spaceViewArtikel = spaceViewArtikel;
    this.textImageUrl = textImageUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailArtikelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailArtikelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_artikel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailArtikelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backActionDetailArtikel;
      ImageView backActionDetailArtikel = ViewBindings.findChildViewById(rootView, id);
      if (backActionDetailArtikel == null) {
        break missingId;
      }

      id = R.id.detailArtikelDate;
      TextView detailArtikelDate = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelDate == null) {
        break missingId;
      }

      id = R.id.detailArtikelDescription;
      TextView detailArtikelDescription = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelDescription == null) {
        break missingId;
      }

      id = R.id.detailArtikelImage;
      ImageView detailArtikelImage = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelImage == null) {
        break missingId;
      }

      id = R.id.detailArtikelSource;
      TextView detailArtikelSource = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelSource == null) {
        break missingId;
      }

      id = R.id.detailArtikelSourceImage;
      TextView detailArtikelSourceImage = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelSourceImage == null) {
        break missingId;
      }

      id = R.id.detailArtikelTitle;
      TextView detailArtikelTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailArtikelTitle == null) {
        break missingId;
      }

      id = R.id.menuArtikel;
      ImageView menuArtikel = ViewBindings.findChildViewById(rootView, id);
      if (menuArtikel == null) {
        break missingId;
      }

      id = R.id.spaceViewArtikel;
      View spaceViewArtikel = ViewBindings.findChildViewById(rootView, id);
      if (spaceViewArtikel == null) {
        break missingId;
      }

      id = R.id.textImageUrl;
      TextView textImageUrl = ViewBindings.findChildViewById(rootView, id);
      if (textImageUrl == null) {
        break missingId;
      }

      return new ActivityDetailArtikelBinding((LinearLayout) rootView, backActionDetailArtikel,
          detailArtikelDate, detailArtikelDescription, detailArtikelImage, detailArtikelSource,
          detailArtikelSourceImage, detailArtikelTitle, menuArtikel, spaceViewArtikel,
          textImageUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
