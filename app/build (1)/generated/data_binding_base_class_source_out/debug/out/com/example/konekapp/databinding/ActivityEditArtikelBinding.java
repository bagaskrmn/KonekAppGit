// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditArtikelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnEditArtikelDone;

  @NonNull
  public final ImageView editArtikelBackAction;

  @NonNull
  public final EditText editDescriptionArtikel;

  @NonNull
  public final ImageView editImageArtikel;

  @NonNull
  public final ConstraintLayout editImageArtikelConstraint;

  @NonNull
  public final EditText editSourceArtikel;

  @NonNull
  public final EditText editSourceImageArtikel;

  @NonNull
  public final EditText editTitleArtikel;

  @NonNull
  public final ImageView imageView11;

  @NonNull
  public final TextView textView5;

  private ActivityEditArtikelBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnEditArtikelDone, @NonNull ImageView editArtikelBackAction,
      @NonNull EditText editDescriptionArtikel, @NonNull ImageView editImageArtikel,
      @NonNull ConstraintLayout editImageArtikelConstraint, @NonNull EditText editSourceArtikel,
      @NonNull EditText editSourceImageArtikel, @NonNull EditText editTitleArtikel,
      @NonNull ImageView imageView11, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.btnEditArtikelDone = btnEditArtikelDone;
    this.editArtikelBackAction = editArtikelBackAction;
    this.editDescriptionArtikel = editDescriptionArtikel;
    this.editImageArtikel = editImageArtikel;
    this.editImageArtikelConstraint = editImageArtikelConstraint;
    this.editSourceArtikel = editSourceArtikel;
    this.editSourceImageArtikel = editSourceImageArtikel;
    this.editTitleArtikel = editTitleArtikel;
    this.imageView11 = imageView11;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditArtikelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditArtikelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_artikel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditArtikelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditArtikelDone;
      Button btnEditArtikelDone = ViewBindings.findChildViewById(rootView, id);
      if (btnEditArtikelDone == null) {
        break missingId;
      }

      id = R.id.editArtikelBackAction;
      ImageView editArtikelBackAction = ViewBindings.findChildViewById(rootView, id);
      if (editArtikelBackAction == null) {
        break missingId;
      }

      id = R.id.editDescriptionArtikel;
      EditText editDescriptionArtikel = ViewBindings.findChildViewById(rootView, id);
      if (editDescriptionArtikel == null) {
        break missingId;
      }

      id = R.id.editImageArtikel;
      ImageView editImageArtikel = ViewBindings.findChildViewById(rootView, id);
      if (editImageArtikel == null) {
        break missingId;
      }

      id = R.id.editImageArtikelConstraint;
      ConstraintLayout editImageArtikelConstraint = ViewBindings.findChildViewById(rootView, id);
      if (editImageArtikelConstraint == null) {
        break missingId;
      }

      id = R.id.editSourceArtikel;
      EditText editSourceArtikel = ViewBindings.findChildViewById(rootView, id);
      if (editSourceArtikel == null) {
        break missingId;
      }

      id = R.id.editSourceImageArtikel;
      EditText editSourceImageArtikel = ViewBindings.findChildViewById(rootView, id);
      if (editSourceImageArtikel == null) {
        break missingId;
      }

      id = R.id.editTitleArtikel;
      EditText editTitleArtikel = ViewBindings.findChildViewById(rootView, id);
      if (editTitleArtikel == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageView imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new ActivityEditArtikelBinding((LinearLayout) rootView, btnEditArtikelDone,
          editArtikelBackAction, editDescriptionArtikel, editImageArtikel,
          editImageArtikelConstraint, editSourceArtikel, editSourceImageArtikel, editTitleArtikel,
          imageView11, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
