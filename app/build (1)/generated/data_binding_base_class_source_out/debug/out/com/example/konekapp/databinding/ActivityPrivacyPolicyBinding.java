// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPrivacyPolicyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView privacyPolicyBackAction;

  @NonNull
  public final WebView wvPrivacyPolicy;

  private ActivityPrivacyPolicyBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView privacyPolicyBackAction, @NonNull WebView wvPrivacyPolicy) {
    this.rootView = rootView;
    this.privacyPolicyBackAction = privacyPolicyBackAction;
    this.wvPrivacyPolicy = wvPrivacyPolicy;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_privacy_policy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPrivacyPolicyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.privacyPolicyBackAction;
      ImageView privacyPolicyBackAction = ViewBindings.findChildViewById(rootView, id);
      if (privacyPolicyBackAction == null) {
        break missingId;
      }

      id = R.id.wvPrivacyPolicy;
      WebView wvPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (wvPrivacyPolicy == null) {
        break missingId;
      }

      return new ActivityPrivacyPolicyBinding((LinearLayout) rootView, privacyPolicyBackAction,
          wvPrivacyPolicy);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
