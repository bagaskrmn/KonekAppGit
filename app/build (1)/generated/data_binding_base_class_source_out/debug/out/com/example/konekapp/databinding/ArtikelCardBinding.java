// Generated by view binder compiler. Do not edit!
package com.example.konekapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.konekapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ArtikelCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateArtikel;

  @NonNull
  public final ImageView imageArtikel;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView sourceArtikel;

  @NonNull
  public final TextView titleArtikel;

  private ArtikelCardBinding(@NonNull CardView rootView, @NonNull TextView dateArtikel,
      @NonNull ImageView imageArtikel, @NonNull LinearLayout linearLayout2,
      @NonNull TextView sourceArtikel, @NonNull TextView titleArtikel) {
    this.rootView = rootView;
    this.dateArtikel = dateArtikel;
    this.imageArtikel = imageArtikel;
    this.linearLayout2 = linearLayout2;
    this.sourceArtikel = sourceArtikel;
    this.titleArtikel = titleArtikel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ArtikelCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ArtikelCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.artikel_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ArtikelCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateArtikel;
      TextView dateArtikel = ViewBindings.findChildViewById(rootView, id);
      if (dateArtikel == null) {
        break missingId;
      }

      id = R.id.imageArtikel;
      ImageView imageArtikel = ViewBindings.findChildViewById(rootView, id);
      if (imageArtikel == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.sourceArtikel;
      TextView sourceArtikel = ViewBindings.findChildViewById(rootView, id);
      if (sourceArtikel == null) {
        break missingId;
      }

      id = R.id.titleArtikel;
      TextView titleArtikel = ViewBindings.findChildViewById(rootView, id);
      if (titleArtikel == null) {
        break missingId;
      }

      return new ArtikelCardBinding((CardView) rootView, dateArtikel, imageArtikel, linearLayout2,
          sourceArtikel, titleArtikel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
